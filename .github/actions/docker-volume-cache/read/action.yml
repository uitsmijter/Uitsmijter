name: "Docker Volume Cache [write]"
description: "Saves docker volumes"
author: "aus der Technik | Uitsmijter"

inputs:
  volume:
    description: 'Volume name to cache'
    required: true
    default: ''
  path:
    description: "Path of the target file."
    required: false
    default: ".volumes"
  retention-days:
    description: "Duration after which artifact will expire in days."
    required: false
    default: "1"

runs:
  using: composite
  steps:
    - name: Set current date as env variable
      shell: sh
      run: echo "NOW=$(date +'%s')" >> $GITHUB_ENV

    - name: Cache
      uses: actions/cache/restore@v3
      with:
        path: ${{ inputs.path }}
        key: volume-${{ inputs.volume }}-${{ github.run_id }}-${{ env.NOW }}
        restore-keys: |
          volume-${{ inputs.volume }}-${{ github.run_id }}
          volume-${{ inputs.volume }}

    - name: Restore data into the Volume
      shell: sh
      env:
        VOLUME_NAME: ${{ inputs.volume }}
        TARGET_PATH: ${{ inputs.path }}
      run: |
        if [ -f "${PWD}/${TARGET_PATH}/${VOLUME_NAME}.tar" ]; then
        echo "Restore data from ${VOLUME_NAME}"
        docker volume create ${VOLUME_NAME}
        docker run --rm \
          -v "${VOLUME_NAME}":/data \
          -v "${PWD}/${TARGET_PATH}":/backup \
          ubuntu \
          tar xpf /backup/${VOLUME_NAME}.tar --directory /
        else 
          echo "No volume is present at: ${PWD}/${TARGET_PATH}/${VOLUME_NAME}.tar"
        fi
