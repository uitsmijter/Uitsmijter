# Ham pages
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ham-webserver
  namespace: ham
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ham-webserver
  template:
    metadata:
      labels:
        app: ham-webserver
    spec:
      containers:
        - image: nginx
          name: nginx
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources: {}
          volumeMounts:
            - name: config-templates
              mountPath: "/etc/nginx/templates"
              readOnly: true
            - name: content
              mountPath: "/usr/share/nginx/html"
              readOnly: true
            - name: webserver-static
              mountPath: "/usr/share/nginx/html/static"
              readOnly: true
            - name: webserver-static-img
              mountPath: "/usr/share/nginx/html/static/img"
              readOnly: true
            - name: webserver-static-fonts
              mountPath: "/usr/share/nginx/html/static/fonts"
              readOnly: true
      volumes:
        - name: config-templates
          configMap:
            name: nginx-config-templates
        - name: content
          configMap:
            name: ham-content
        - name: webserver-static
          configMap:
            name: webserver-static
        - name: webserver-static-img
          configMap:
            name: webserver-static-img
        - name: webserver-static-fonts
          configMap:
            name: webserver-static-fonts

---
kind: Service
apiVersion: v1
metadata:
  name: ham-webserver
  namespace: ham

spec:
  selector:
    app: ham-webserver

  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-templates
  namespace: ham
data:
  default.conf.template: |
    server {
      listen        80;
      server_name   page.ham.test;
      location / {
        root   /usr/share/nginx/html;
        index  /index.html;
        add_header Cache-Control no-cache;
        try_files $uri $uri.html $uri/index.html;
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ham-content
  namespace: ham
data:
  index.html: |
    <html>
    <head>
        <title>A hilarious ham named Hank</title>
        <meta http-equiv="Pragma" content="no-cache"/>
        <meta http-equiv="Cache-Control" content="no-cache"/>
    </head>
    <body>
    <h1 class="headline">Hank and Ellie</h1>
    <p>
        In the quirky town of Foodville, where edible characters lived harmoniously, a hilarious ham named Hank and an
        awesome egg named Ellie formed an unlikely duo. Hank's witty jokes always cracked Ellie up, while her smooth
        moves on the dance floor left him in awe. Together, they became the life of every culinary gathering, turning
        mundane meals into uproarious feasts. Their infectious laughter and remarkable camaraderie proved that even the
        most unexpected friendships could add an extra dash of flavor to life's delightful tapestry.
    </p>
    
    <footer>
        <a href="//id.ham.test/logout?post_logout_redirect_uri=//page.ham.test">logout</a>
    </footer>
    </body>
    </html>

---
apiVersion: networking.k8s.io/v1
kind: Ingress

metadata:
  name: ham-webserver
  namespace: ham
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: uitsmijter-forward-auth@kubernetescrd

spec:
  tls:
    - secretName: ham.test
  rules:
    - host: page.ham.test
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: ham-webserver
                port:
                  number: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress

metadata:
  name: ham-webserver-static
  namespace: ham
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"

spec:
  tls:
    - secretName: ham.test
  rules:
    - host: page.ham.test
      http:
        paths:
          - path: "/static"
            pathType: Prefix
            backend:
              service:
                name: ham-webserver
                port:
                  number: 80

